Raw GNSS Measurements  |  Android DevelopersAndroid Developers
          Platform
        
          Android Studio
        
          Google Play
        
          Android Jetpack
        
          Docs
        
          News
        
    
    
    
      Documentation
    
    
  
          Overview
        
          Guides
        
          Reference
        
          Samples
        
          Design & Quality
        







          Platform
        



          Android Studio
        



          Google Play
        



          Android Jetpack
        



          Docs
        




          Overview
        



          Guides
        



          Reference
        



          Samples
        



          Design & Quality
        






          News
        












App BasicsIntroductionBuild your first appOverviewCreate an Android projectRun your appBuild a simple user interfaceStart another activityApp fundamentalsApp resourcesOverviewHandle configuration changesLocalizationLocalize your appTest your app with pseudolocalesUnicode and internationalization supportLanguage and locale resolutionComplex XML resourcesResource typesOverviewAnimationColor state listDrawableLayoutMenuStringStyleFontMore typesApp manifest fileOverview<action><activity><activity-alias><application><category><compatible-screens><data><grant-uri-permission><instrumentation><intent-filter><manifest><meta-data><path-permission><permission><permission-group><permission-tree><provider><receiver><service><supports-gl-texture><supports-screens><uses-configuration><uses-feature><uses-library><uses-permission><uses-permission-sdk-23><uses-sdk>App permissionsOverviewRequest app permissionsApp permissions best practicesDefine custom permissionsDevicesDevice compatibilityOverviewScreen compatibility overviewSupport different screen sizesSupport different pixel densitiesSupport display cutoutsDeclare restricted screen supportMultiple APK supportOverviewCreate multiple APKs for different API levelsCreate multiple APKs for different screen sizesCreate multiple APKs for different GL texturesCreate multiple APKs with several dimensionsSupport different languages and culturesSupport different platform versionsFilters on Google PlayWearOverviewAdding wearable features to notificationsOverviewCreating a notificationNotification stylesBridging mode for notificationsMaintaining compatibilityCreating wearable appsOverviewCreating and running a wearable appStandalone appsCreating custom layoutsKeeping your app visibleAuthentication in WearAdding voice capabilitiesPackaging and distributing Wear appsDebugging a Wear appCapturing Wear UI screenshotsCreating Wear apps for ChinaCreating custom UIsOverviewDefining layoutsCreating listsShowing confirmationsExiting full-screen activitiesUsing the Wear UI libraryWear navigation and actionsMulti-function buttonsRotary inputCreating input method editorsUsing wrist gesturesSending and syncing dataOverviewNetwork access and syncingAccessing the wearable data layerSyncing data itemsTransferring assetsSending and receiving messagesHandling data layer eventsMigrating Wear apps to GoogleApiCreating data providersOverviewExpose data to complicationsCreating watch facesOverviewDesigning watch facesBuilding a watch face serviceDrawing watch facesWatch face complicationsExposing data to complicationsAdding complications to a watch faceCreating interactive watch facesProviding configuration activitiesAddressing common issuesOptimizing watch facesDetecting locationRequesting PermissionsUsing the SpeakerAndroid TVOverviewBuilding TV AppsOverviewGetting started with TV appsHandling TV hardwareManaging TV controllersBuilding TV layoutsCreating TV navigationBuilding TV playback appsOverviewCreating a catalog browserProviding a card viewBuilding a details viewUsing Leanback transport controlsDisplaying a now playing cardAdding a guided stepIntroducing first-time users to your appEnabling background playbackHelping users find content on TVOverviewRecommending TV contentOverviewChannels on the home screenVideo program attributesAudio program attributesGame program attributesWatch next attributesPreviewing videosRecommendations in Android N and earlierMaking TV apps searchableSearching within TV AppsBuilding TV gamesBuilding TV channelsOverviewDeveloping a TV input serviceWorking with channel dataManaging user interactionSupporting time-shiftingSupporting content recordingTV Apps checklistAndroid AutoOverviewGetting Started with AutoPlaying Audio for AutoMessaging for AutoTesting for AutoAndroid ThingsOverviewPlatform differencesGoogle servicesSupported hardwareDeveloper kitsGet startedNXP i.MX7DRaspberry Pi 3Advanced setupOverviewManually flash an imageRecover a deviceConnecting to Wi-Fi with adbBuild appsCreate a Things appOverviewCreate a projectConnect the hardwareInteract with peripheralsIntegrate peripheral driversCommunicate with wireless devicesBluetoothLoWPANConfigure devicesSettingsUpdatesInteract with peripheralsOverviewGPIOPWMI2CSPIUARTNative PIOCLI toolIntegrate native codeBuild user-space driversOverviewLocationInputSensorsLoWPANSamplesManage devicesOverviewCreate a productConfigure a productCreate a buildOverviewManage appsPush an updateOverviewAutomatic updatesMonitor analyticsTermsConsole Terms of ServiceSDK License AgreementAndroid Things ConsoleChrome OS devicesOverviewBuilding apps for Chrome OSPreparing your development environmentOptimizing Apps for Chrome OSResolving Issues with Screen SizeApp Manifest Compatibility for ChromebooksLoading Apps on ChromebooksChrome OS Device Support for AppsApp Rendering Differences on ChromebooksWindow managementInput compatibility for ChromebooksAndroid Studio on Chrome OSChrome OS devices on EmulatorTest Cases for Android Apps on Chrome OSCore topicsActivitiesIntroduction to activitiesThe activity lifecycleActivity state changesTest your activitiesTasks and back stackProcesses and app lifecycleParcelables and bundlesFragmentsOverviewCreate a fragmentTest your fragmentsBuild a flexible UICommunicate with other fragmentsInteract with other appsOverviewSending the user to another appGetting a result from an activityAllowing other apps to start your activityHandling app linksOverviewEnabling links to app contentVerify app linksCreate app links for instant appsLoadersRecents screenMulti-window supportApp shortcutsOverviewCreate shortcutsManage shortcutsBest practices for shortcutsApp widgetsOverviewBuild an app widgetBuild an app widget hostArchitecture ComponentsOverviewAdding Components to your ProjectData Binding LibraryOverviewGet startedLayouts and binding expressionsWork with observable data objectsGenerated binding classesBinding adaptersBind layout views to Architecture ComponentsTwo-way data bindingHandling LifecyclesLiveDataNavigationOverviewImplement NavigationUpdate UI components with NavigationUINested graphsPass data between destinationsAdd support for new destinationImplement conditional navigationCreate a deep link for a destinationGlobal actionsMigrate to the Navigation ComponentPaging LibraryOverviewUI Components and ConsiderationsData Components and ConsiderationsRoom Persistence LibraryViewModelWorkManagerOverviewBasicsAdvancedMigrating from Firebase JobDispatcherSaving StatesRelease notesIntents and intent filtersOverviewCommon intentsUser interface & navigationOverviewLayoutsOverviewBuild a responsive UI with ConstraintLayoutCreate a list with RecyclerViewCreate a card-based layoutImplementing adaptive UI flowsImproving layout performanceOverviewOptimizing layout hierarchiesRe-using layouts with <include/>Delayed loading of viewsMaking ListView scrolling smoothLinear layoutAdapter viewRelative layoutCustom view componentsOverviewCreating a custom view classImplementing custom drawingMaking the view interactiveOptimizing the viewLook and feelMaterial designStyles and themesAdaptive iconsAdd a floating action buttonCreate shadows and clip viewsTextAutosizing TextViewsDownloadable fontsFonts in XMLEmoji compatibilityMagnifier widgetSpansButtonsCheckboxesRadio buttonsToggle buttonsSpinnersPickersTooltipsNotificationsOverviewCreate a notificationCreate an expandable notificationStart an activity from a notificationCreate a group of notificationsCreate and manage notification channelsModify a notification BadgeCreate a custom notificationAdd the app barOverviewSet up the app barAdd and handle actionsAdd an up actionUse action views and action providersControl the system UI visibilityOverviewDim the system barsHide the status barHide the navigation barEnable fullscreen modeRespond to UI visibility changesDesigning effective navigationOverviewPlanning screens and their relationshipsPlanning for multiple touchscreen sizesProviding descendant and lateral navigationDesigning back and up navigationPutting it all together: wireframing the example appImplementing effective navigationOverviewCreating swipe views with tabsCreating a navigation drawerProviding up navigationProviding proper back navigationImplementing descendant navigationSlide between fragments using ViewPagerSupporting swipe-to-refreshOverviewAdding swipe-to-refresh to your appResponding to a refresh gestureToasts overviewPop-up messages overviewOverviewBuild and display a pop-up messageAdd an action to a messageDialogsMenusSettingsOverviewOrganize your settingsCustomize your settingsUse saved valuesBuild a hierarchy in codeHandle other form factorsPreference components and attributesSearchOverviewCreating a search interfaceAdding recent query suggestionsAdding custom suggestionsSearchable configurationAdding search functionalityOverviewSetting up the search interfaceStoring and searching for dataRemaining backward compatibleCopy and pasteDrag and dropCreating backward-compatible UIsOverviewAbstracting the new APIsProxying to the new APIsCreating an implementation with older APIsUsing the version-aware componentAnimations & transitionsOverviewAnimations overviewProperty animation overviewAnimate drawable graphicsReveal or hide a view using animationMove a view using animationMove a view using a fling animationEnlarge a view using a zoom animationAnimate movement using spring physicsAuto animate layout updatesAnimate layout changes using a transitionCreate a custom transition animationStart an activity using an animationImages & graphicsOverviewDrawables overviewVector drawables overviewHandling bitmapsSelecting colors with the palette APIReducing image download sizesHardware accelerationOpenGL ESDisplaying graphics with OpenGL ESOverviewBuilding an OpenGL ES environmentDefining shapesDrawing shapesApplying projection and camera viewsAdding motionResponding to touch eventsRenderingOverviewReducing overdrawPerformance and view hierarchiesAnalyzing with profile GPU renderingEnhancing graphics with wide color contentAudio & videoAudio & video overviewSupported media formatsMedia app architectureMedia app architecture overviewUsing a media sessionBuilding an audio appAudio app overviewBuilding a media browser serviceBuilding a media browser clientMedia session callbacksBuilding a video appVideo app overviewBuilding a video player activityMedia session callbacksResponding to media buttonsHandling changes in audio outputManaging audio focusThe Google Assistant and media appsRouting between devicesRouting overviewMediaRouter overviewMediaRouteProvider overviewControl amplitude with VolumeShaperMediaPlayer overviewMediaRecorder overviewExoPlayerBackground tasksOverviewGuide to background processingSending operations to multiple threadsOverviewSpecify the code to run on a threadCreate a manager for multiple threadsRun code on a thread pool threadCommunicate with the UI threadSchedule jobs intelligentlyServicesOverviewCreate a background serviceSend work requests to the background serviceReport work statusBound servicesAIDL overviewBackground optimizationsBroadcasts overviewImplicit Broadcast ExceptionsManage device awake stateOverviewKeep the device awakeSchedule repeating alarmsApp data & filesOverviewStorage overviewSave files on device storageSave key-value dataSave data in a local databaseOverviewDefine data using entitiesCreate views into a databaseAccess data using DAOsMigrate your databaseTest your databaseReference complex dataSharing simple dataOverviewSending simple data to other appsReceiving simple data from other appsAdding an easy share actionSharing filesOverviewSetting up file sharingSharing a fileRequesting a shared fileRetrieving file informationSharing files with NFCOverviewSending files to another deviceReceiving files from another devicePrinting filesOverviewPrinting photosPrinting HTML documentsPrinting custom documentsContent providersOverviewContent provider basicsCreating a content providerOpen files using storage access frameworkCreate a custom document providerApp install locationUser data & identityOverviewAdd sign-in workflowAutofill frameworkOverviewOptimize your app for autofillBuild autofill servicesCalendar provider overviewContacts providerOverviewRetrieving a list of contactsRetrieving details for a contactModifying contacts using intentsDisplaying the quick contact badgeAccount transferData backupOverviewBack up user dataBack up key-value pairsOverviewRegisterTest backup and restoreBest practices for unique identifiersRemember and authenticate usersOverviewRemember your userAuthenticate to OAuth2 servicesCreate a custom account typeUser locationOverviewOptimize location for batteryGet the last known locationChange location settingsReceive location updatesDisplay a location addressCreate and monitor geofencesDetect when users start an activityMigrate to location and context APIsAdd mapsTouch & inputOverviewInput eventsUsing touch gesturesOverviewDetect common gesturesTrack touch and pointer movementsAnimate a scroll gestureHandle multi-touch gesturesDrag and scaleManage touch events in a ViewGroupHandling keyboard inputOverviewSpecifying the input method typeHandling input method visibilitySupporting keyboard navigationHandling keyboard actionsSupporting game controllersOverviewHandling controller actionsSupporting controllers across Android versionsSupporting multiple game controllersInput method editorsCreating an input methodImage keyboardSpelling checkerCameraOverviewTaking photosRecording videosControlling the cameraCamera APISensorsOverviewSensors overviewMotion sensorsPosition sensorsEnvironment sensorsRaw GNSS measurementsConnectivityOverviewPerforming network operationsOverviewConnect to the networkManage network usageOptimize network data usageParse XML dataTransmit network data using VolleyOverviewSend a simple requestSet up RequestQueueMake a standard requestImplement a custom requestPerform network operations using CronetOverviewSend a simple requestCronet request lifecycleReferenceorg.chromium.netOverviewCallbackExceptionCronetEngineOverviewCronetEngine.BuilderOverviewLibraryLoaderCronetExceptionInlineExecutionProhibitedExceptionNetworkExceptionQuicExceptionUploadDataProviderUploadDataProvidersUploadDataSinkUrlRequestOverviewBuilderCallbackStatusStatusListenerUrlResponseInfoOverviewHeaderBlockTransferring data without draining the batteryOverviewOptimize downloads for efficient network accessMinimize the effect of regular updatesAvoid redundant downloadsModify patterns based on the connectivity typeReduce network battery drainOverviewCollecting network traffic dataAnalyzing data trafficOptimizing user-initiated network useOptimizing app-initiated network useOptimizing server-initiated network useOptimizing general network useTransfer data using Sync AdaptersOverviewCreate a Stub AuthenticatorCreate a Stub Content ProviderCreate a Sync AdapterRun a Sync AdapterBluetoothOverviewBluetooth low energy overviewNFCOverviewNFC basicsAdvanced NFCHost-based card emulation overviewTelecomOverviewBuild a calling appWi-FiWi-Fi scanning overviewWi-Fi peer-to-peer overviewWi-Fi aware overviewWi-Fi location with RTTCompanion device pairing overviewUSBOverviewAccessory overviewHost overviewVPNSession initiation protocol overviewDiscover and connectOverviewUse network service discoveryCreate P2P connections with Wi-FiUse Wi-Fi P2P for service discoveryRenderscriptOverviewAdvanced RenderScriptRuntime API referenceOverviewNumerical typesObject typesConversion functionsMathematical constants and functionsVector math functionsMatrix functionsQuaternion functionsAtomic update functionsTime functions and typesAllocation data access functionsObject characteristics functionsKernel invocation functions and typesInput/output functionsDebugging functionsGraphics functions and typesIndexWeb-based contentOverviewBuilding web apps in WebViewManaging WebView objectsMigrating to WebView in Android 4.4Supporting different screens in web appsDebugging web appsBest practices for web appsAndroid App BundlesOverviewDownload modules with the Play Core LibraryGoogle Play InstantOverview of Google Play InstantGet started with instant appsCreate an instant-enabled app bundleUX best practices for appsGet started with instant gamesOverviewUnity pluginTechnical requirements checklist for gamesUX best practices for gamesReduce the size of your instant app or gameAdd ads to your instant app or gameProvide multiple entry pointsIntegrate with FirebaseAdd Google Analytics for Firebase to your instant appUse Firebase Dynamic Links with instant appsGoogle Play Instant policyResourcesReferenceCode samplesSDK release notesSupportFAQsKnown issuesStackOverflowApp ActionsSlicesOverviewGetting StartedSlice templatesBest practicesTestingOverviewFundamentals of testingSet up projectBuilding effective unit testsOverviewBuilding local unit testsBuilding instrumented unit testsAutomating UI testsOverviewTesting UI for a single appTesting UI for multiple appsTesting app component integrationsOverviewTesting your serviceTesting your content providerTesting UI performanceEspressoOverviewSetup instructionsBasicsRecipesMultiprocessAccessibility checkingListsIntentsWebIdling resourceCheat sheetUI AutomatorJUnit4 RulesAndroidJUnitRunnerSamplesRelease notesPerformanceOverviewAndroid VitalsOverviewStuck Partial Wake LocksExcessive WakeupsExcessive Background Wi-Fi ScansExcessive Background Network UsageANRsCrashesSlow RenderingFrozen FramesPermission DenialsApp Startup TimeApp Standby BucketsProcesses and Threads OverviewBetter Performance through ThreadingOptimizing for Battery LifeOverviewOptimizing for Doze and App StandbyMonitoring the Battery Level and Charging StateDetermining and Monitoring the Docking State and TypeDetermining and Monitoring the Connectivity StatusPower Management RestrictionsAnalyzing Power Use with Battery HistorianTesting power-related issuesReducing APK SizeManage Your App's MemoryOverview of Memory ManagemementDesigning for SeamlessnessKeeping Your App ResponsivePerformance TipsSMP Primer for AndroidVerifying App Behavior on the Android Runtime (ART)AccessibilityOverviewMaking apps more accessibleUsing node tree debuggingBuilding accessibility servicesBuild accessible custom viewsBuild accessibility serviceTest your app's accessibilitySecurityApp security best practicesSecurity tipsSecurity with HTTPS and SSLNetwork security configurationUpdating your security provider to protect against SSL exploitsProtecting against security threats with SafetyNetOverviewSafetyNet Attestation APISafetyNet Safe Browsing APISafetyNet reCAPTCHA APISafetyNet Verify Apps APICryptographyAndroid Keystore SystemVerifying hardware-backed key pairs with key attestationAndroid Protected ConfirmationSupporting Direct BootUsing scoped directory accessApp security improvement programBuild for BillionsOverviewConnectivityDevice capabilityData costBattery consumptionUI and contentBuild for EnterpriseOverviewDeveloper guideWork profilesSet up managed configurationsWork contactsDevice management policiesDevice managementOverviewBuild a device policy controllerWork profiles on fully managed devicesDedicated devicesOverviewLock task modeMultiple usersCookbookDevice controlNetworking and telephonySecuritySystem updatesNetwork activity loggingAndroid versionsOverviewAndroid 9Android 8.0Android 7.0Device administrationGoogle PlayGoogle Play BillingOverviewUse the Google Play Billing LibraryOverviewAdd one-time product-specific featuresAdd subscription-specific featuresPlay Billing Library referencePlay Billing Library release notesUse In-app Billing with AIDLOverviewIn-app Billing ReferenceAdd Real-time Developer NotificationsBest PracticesTest Google Play BillingMaking Your App Content Searchable by GoogleOptimizing Contextual Content for the AssistantGoogle Play Developer APIAPK Expansion FilesApplication LicensingOverviewLicensing OverviewSetting Up for LicensingAdding Licensing to Your AppLicensing ReferenceGoogle Play Install ReferrerOverviewPlay Install Referrer LibraryOverviewReferenceReleases NotesPlay Install Referrer API









    
    
      Android Developers
    
    
    




    
    
      Docs
    
    
    




    
    
      Guides
    
    
    




    Raw GNSS Measurements
  


The Android Framework provides access to raw GNSS measurements
on several Android devices.
Note: Google has released version 2.6.3.0 of the GNSS Analysis App. For more
information, see the GNSS Analysis app v2.6.3.0 release notes.
This article lists Android devices that support raw GNSS measurements as
well as tools to log and analyze GNSS data. You can find the tools in
the GPS Measurement Tools
repo on GitHub, which includes the GNSS Logger
APK and
the GNSS Analysis app for
Linux,
Windows,
macOS,
and the Installation and User Manual.
Original equipment manufacturers (OEMs), developers, and researchers can make use of the tools in this page to test new phone designs, validate functionality, develop new algorithms, evaluate improvements to the GNSS system implementation as well as building value added apps.
Android devices that support raw GNSS measurements
Before you can get any raw GNSS output, you need to make sure that you
have a device that can capture such data. Most devices manufactured in 2016 or
later and shipped with Android 7.0 or higher provide raw GNSS data.
Depending on the device, raw GNSS measurements can include all or some of the
following data:

Pseudorange and pseudorange rate.
Navigation messages.
Accumulated delta range or carrier.
Hardware (HW) clock.

The table below lists devices that support raw GNSS measurements and the data
they provide. This isn't a comprehensive list, you should contact the
manufacturer to make sure that a specific device supports raw GNSS measurements.



Model
Android version
Automatic Gain Control
Navigation messages
Accumulated delta range
HW clock
L5 Support
Global systems




Huawei Mate 20  X
9.0
no
yes
yes
yes
yes
GPSGLONASSGALILEOQZSS


Huawei Mate 20 RS (Porsche Design)
9.0
no
no
yes
yes
yes
GPSGLONASSGALILEOBeiDou


Huawei Mate 20 Pro
9.0
no
no
yes
yes
yes
GPSGLONASSGALILEOBeiDou


Huawei Mate 20
9.0
no
no
yes
yes
yes
GPSGLONASSGALILEOBeiDou


Huawei Mate RS (Porsche Design)
8.1
no
yes
yes
yes
no
GPSGLONASS


Pixel 3 XL
9.0
yes
no
no
yes
no
GPSGLONASSGALILEOBeiDou


Pixel 3
9.0
yes
no
no
yes
no
GPSGLONASSGALILEOBeiDou


Vivo X21
9.0
no
no
no
yes
no
GPSGLONASSBeiDou


OPPO R15 Pro
9.0
no
no
no
yes
no
GPSGLONASSGALILEOBeiDou


Xiaomi Mi 8
8.1
no
yes
yes
yes
yes
GPSGLONASSGALILEOBeiDouQZSS


LG V40 ThinQ
8.1
no
no
no
yes
no
GPSGLONASSQZSS


OnePlust 6T
9.0
no
no
no
yes
no
GPSGLONASSQZSS


Samsung Note 9
8.1
no
no
no
yes
no
GPSGLONASS QZSSSBAS


LG G7 ThinQ
8.0
no
no
no
yes
no
GPSGLONASS


Xiaomi Mix 2S
9.0
no
no
no
yes
no
GPSGLONASSSBAS


Huawei P20
8.1
no
yes
yes
yes
no
GPSGLONASSQZSS


Samsung Galaxy S9 (Exynos)1
8.0
no
yes
yes
yes
no
GPSGLONASSQZSS


Samsung Galaxy S9+
8.0
no
no
no
yes
no
GPSGLONASS


Sony Xperia XZ2
8.0
no
no
no
yes
no
GPSGLONASSQZSS


OPPO R15
9.0
no
no
no
yes
no
GPSGLONASSGALILEOBeiDou


HTC U11 Plus
8.0
no
no
no
yes
no
GPSGLONASS


HTC U11 Life
8.0
no
no
no
yes
no
GPSGLONASS


Huawei Mate 10
8.0
no
yes
yes
yes
no
GPSGLONASS


Huawei Mate 10 Pro
8.0
no
yes
yes
yes
no
GPSGLONASSQZSS


Google Pixel 2 XL
8.0
yes
no
no
yes
no
GPSGLONASSGALILEOBeiDouQZSS


Google Pixel 2
8.0
yes
no
no
yes
no
GPSGLONASSGALILEOBeiDouQZSS


Sony Xperia XZ1
8.0
no
no
no
yes
no
GPSGLONASSGALILEOBeiDou


Samsung Note 8 (Exynos)
7.1
no
yes
yes
yes
no
GPSGLONASSGALILEOBeiDou


Samsung Note 8 (QCOM)
7.1
no
no
no
yes
no
GPSGLONASSGALILEOBeiDou


LG V30
7.1.2
no
no
no
yes
no
GPSGLONASS


Moto X4 2017
7.1
no
no
no
yes
no
GPSGLONASS


Essential PH-1
7.1
no
no
no
yes
no
GPSGLONASS


Moto Z2
7.1
no
no
no
yes
no
GPSGLONASS


HTC U11
7.1
no
no
no
yes
no
GPSGLONASS


OPPO R11
7.1
no
no
no
yes
no
GPSGLONASSGALILEOBeiDou


Huawei Honor 9
7.0
no
yes
yes
yes
no
GPSGLONASS


Samsung S8 (Exynos)2
7.0
no
yes
yes
yes
no
GPSGLONASSGALILEOBeiDouQZSS


Samsung S8 (QCOM)3
7.0
no
no
no
yes
no
GPS


Huawei P10
7.0
no
yes
yes
yes
no
GPSGLONASSGALILEOBeiDouQZSS


Huawei P10 Lite
7.0
no
no
no
yes
no
GPS


Huawei Honor 8
7.0
no
yes
yes
yes
no
GPSGLONASSBeiDou


Huawei Mate 9
7.0
no
yes
yes
yes
no
GPSGLONASSBeiDou


Huawei P9
7.0
no
yes
yes
yes
no
GPSGLONASSBeiDou


Google Pixel XL
7.0
no
no
no
yes
no
GPS


Google Pixel
7.0
no
no
no
yes
no
GPS


Nexus 6P4
7.0
no
no
no
no
no
GPS


Nexus 5X4
7.0
no
no
no
no
no
GPS


Nexus 9 (non cellular version)5
7.1
no
yes
yes
yes
no
GPSGLONASS



1 Exynos, EMEA devices, Models: G960F or G965F
2 Exynos, EMEA devices, Models: G950F or G955F
3 QCOM, USA devices, Models: G950U or G955U
4 Raw measurements are provided only when a GPS position is available.
5 No duty cycling. Works only on the non cellular version of Nexus 9.
For more information about the data provided by a device, see Global Navigation
Satellite Systems.
Logging raw measurements
You can use Android Studio to build an app that captures raw GNSS measurements
and logs them to a file. The GPS Measurement
Tools project includes
GNSS Logger, a sample app that shows how to log data related to Android
location, including raw GNSS measurements.
Download the GNSS Logger
APK to install the
sample app in your device.
To get GNSS output with the sample app, your device must support raw GNSS
measurements. For more information, see Android devices that support raw
GNSS measurements.
Once you have captured the GNSS log using the GNSS Logger, you can copy the log
files from the device to your computer for further analysis. From within the
GNSS Logger you can send the files to yourself via email or save them to Google
Drive. Alternatively, you can save the files using the file management app on
the device, or you can use the Android Debug Bridge (ADB) as explained in
Copy files to/from a device.
To browse the sample source code, see the
GNSSLogger
folder in the GPS Measurement
Tools repository on GitHub.
Analyzing raw measurements
The GNSS Analysis app reads the GPS/GNSS raw measurements collected by the GNSS
Logger and uses them to analyze the GNSS receiver behavior, as shown in figure
1.
You can download the app for
Linux,
Windows
and
macOS,
systems, or download the Installation and User
Manual.

Figure 1. GNSS Logger collects the measurements that can be consumed by GNSS
Analysis.

The GNSS Analysis app is built on
MATLAB, but you don't need
to have MATLAB to run it. The app is compiled into an executable that installs a
copy of the MATLAB Runtime.
GNSS Analysis Control Panel
The GNSS Analysis control panel, shown in figure 2, lets you manage app
features, such as:

Select which satellites are displayed.
Control the reference position, velocity, and time (PVT) used for calculating
measurement errors.
Generate analysis reports.
Define a window in the data between start and end times.

)
Figure 2. GNSS Analysis control panel

GNSS Analysis interactive plots
The GNSS Analysis app provides interactive plots organized in radio frequency
(RF), clocks, and measurements columns, as shown in figure 3.
)
Figure 3. GNSS Analysis app displaying interactive plots.

The RF column shows the following data:

For each constellation, the four satellites with the strongest signals.
For each satellite, the time plot of carrier to noise density (C/No).
The skyplot of satellite positions.

The clock column shows the following data:

The pseudoranges.
The offset frequency of the receiver clock, which is computed using one of the
following reference positions:

Automatically computed mean position.
Latitude, longitude, and altitude entered by the user.
National Marine Electronics Association (NMEA) file with truth reference
PVT.


Note: One of the major benefits of using raw measurements is that you can
observe the receiver clock behavior with a precision of at least 1 part
per billion (ppb). This is important to watch when building a device,
because any heat source near the reference oscillator might cause the
clock error rate to increase rapidly.
The offset of the standby clock that keeps time when the receiver resets the
duty cycle of the primary oscillator.

The measurements column shows the following data:

The weighted least squares position results obtained from the raw
pseudoranges. The weighting is done using the reported uncertainty of each
measurement, which is part of the raw measurement API spec.
The errors of each pseudorange for each measurement.
The errors of each pseudorange rate for each measurement.

Note: A major benefit of raw measurements is that you can analyze the
errors of each measurement, which provides great insight into the signal
environment and receiver behavior.

GNSS Analysis test report
GNSS Analysis can generate a test report, as shown in figure 4, that evaluates
the API implementation, received signal, clock behavior, and measurement
accuracy. For each case, the app reports whether the receiver passed or failed
the test based on the performance measured against known benchmarks. The test
report is useful for device manufacturers, who can use it as they iterate
through the design and implementation of new devices. To generate the test
report, click Make Report.

Figure 4. GNSS Analysis test report

The Compare tab provides a side-by-side comparison, shown in figure 5, of
C/No from several GNSS log files, which is useful when comparing the RF
performance of several devices.

Figure 5. Side-by-side comparison of C/No data from several log files

Interested in the source code? The GPS Measurement
Tool Project provides an open
source MATLAB example that you
can use to perform the following actions using GPS constellation signals:

Read data captured with the GNSS Logger sample app.
Compute and visualize pseudoranges.
Compute weighted least squares position and velocity.
View and analyze carrier phase.

GNSS Analysis app v2.6.3.0 release notes
GNSS Analysis app version 2.6.3.0 includes the following updates:

Full Support of multi-constellation and multi-frequency GnssLog analysis, including L1-L5 analysis, and report enhancement with PASS/FAIL results.
Fill missing discontinuity counter increments from the GNSS chipset in the case where ReceivedSvTimeNanos is adjusted without reporting an increment. A warning is generated to report this issue to the end user.
Added PASS/FAIL/WARNING logs to the Gnss Analysis Report related to mandatory and highly recommeneded raw GNSS fields.
Epochs with Full Bias not set or set to max integer are no longer considered for analysis.
GLONASS satellites reported in part of the log with FSN IDs and other part as OSN IDs are now merged.
Optimized for execution speed and stability.

Provide feedback
We want to improve the support for GNSS on Android. Let us know about any issues
with GNSS support on Android by using the GNSS issue
tracker. Please check if your issue has already been addressed in the FAQ before posting it.
If you have used the GNSS Analysis tools, please provide feedback by answering a
short survey. If you have other
questions or a request for support, see Developer Support
Resources.
You can find answers to frequently asked questions in the GNSS Analysis Tools
FAQs.





        
        Previous
      


          arrow_back
        
        Environment sensors
      




Content and code samples on this page are subject to the licenses described in the Content License. Java is a registered trademark of Oracle and/or its affiliates.

      
      Last updated January 31, 2019.
    





          
          
            Twitter
          
        Follow @AndroidDev on Twitter
          
          
            YouTube
          
        Check out Android Developers on YouTubeMore Android
                Android
            
                Enterprise
            
                Security
            
                Source
            Support
                Report platform bug
            
                Report documentation bug
            
                Google Play support
            
                Join user studies
            Documentation
                Developer guides
            
                Design guides
            
                API reference
            
                Samples
            
                Android Studio
            
                Android
            
                Chrome
            
                Firebase
            
                Google Cloud Platform
            
                All Products
            
            Bahasa Indonesia
          
            Deutsch
          
            English
          
            español
          
            Español (América Latina)
          
            français
          
            Português Brasileiro
          
            Tiếng Việt
          
            Türkçe
          
            Русский
          
            ภาษาไทย
          
            日本語
          
            简体中文
          
            繁體中文
          
            한국어
          Privacy
         License
         Brand Guidelines
         
        Get Android and Google Play news by email
      
        
        Subscribe
      
