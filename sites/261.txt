Cryptography  |  Android DevelopersAndroid Developers
          Platform
        
          Android Studio
        
          Google Play
        
          Android Jetpack
        
          Docs
        
          News
        
    
    
    
      Documentation
    
    
  
          Overview
        
          Guides
        
          Reference
        
          Samples
        
          Design & Quality
        







          Platform
        



          Android Studio
        



          Google Play
        



          Android Jetpack
        



          Docs
        




          Overview
        



          Guides
        



          Reference
        



          Samples
        



          Design & Quality
        






          News
        












App BasicsIntroductionBuild your first appOverviewCreate an Android projectRun your appBuild a simple user interfaceStart another activityApp fundamentalsApp resourcesOverviewHandle configuration changesLocalizationLocalize your appTest your app with pseudolocalesUnicode and internationalization supportLanguage and locale resolutionComplex XML resourcesResource typesOverviewAnimationColor state listDrawableLayoutMenuStringStyleFontMore typesApp manifest fileOverview<action><activity><activity-alias><application><category><compatible-screens><data><grant-uri-permission><instrumentation><intent-filter><manifest><meta-data><path-permission><permission><permission-group><permission-tree><provider><receiver><service><supports-gl-texture><supports-screens><uses-configuration><uses-feature><uses-library><uses-permission><uses-permission-sdk-23><uses-sdk>App permissionsOverviewRequest app permissionsApp permissions best practicesDefine custom permissionsDevicesDevice compatibilityOverviewScreen compatibility overviewSupport different screen sizesSupport different pixel densitiesSupport display cutoutsDeclare restricted screen supportMultiple APK supportOverviewCreate multiple APKs for different API levelsCreate multiple APKs for different screen sizesCreate multiple APKs for different GL texturesCreate multiple APKs with several dimensionsSupport different languages and culturesSupport different platform versionsFilters on Google PlayWearOverviewAdding wearable features to notificationsOverviewCreating a notificationNotification stylesBridging mode for notificationsMaintaining compatibilityCreating wearable appsOverviewCreating and running a wearable appStandalone appsCreating custom layoutsKeeping your app visibleAuthentication in WearAdding voice capabilitiesPackaging and distributing Wear appsDebugging a Wear appCapturing Wear UI screenshotsCreating Wear apps for ChinaCreating custom UIsOverviewDefining layoutsCreating listsShowing confirmationsExiting full-screen activitiesUsing the Wear UI libraryWear navigation and actionsMulti-function buttonsRotary inputCreating input method editorsUsing wrist gesturesSending and syncing dataOverviewNetwork access and syncingAccessing the wearable data layerSyncing data itemsTransferring assetsSending and receiving messagesHandling data layer eventsMigrating Wear apps to GoogleApiCreating data providersOverviewExpose data to complicationsCreating watch facesOverviewDesigning watch facesBuilding a watch face serviceDrawing watch facesWatch face complicationsExposing data to complicationsAdding complications to a watch faceCreating interactive watch facesProviding configuration activitiesAddressing common issuesOptimizing watch facesDetecting locationRequesting PermissionsUsing the SpeakerAndroid TVOverviewBuilding TV AppsOverviewGetting started with TV appsHandling TV hardwareManaging TV controllersBuilding TV layoutsCreating TV navigationBuilding TV playback appsOverviewCreating a catalog browserProviding a card viewBuilding a details viewUsing Leanback transport controlsDisplaying a now playing cardAdding a guided stepIntroducing first-time users to your appEnabling background playbackHelping users find content on TVOverviewRecommending TV contentOverviewChannels on the home screenVideo program attributesAudio program attributesGame program attributesWatch next attributesPreviewing videosRecommendations in Android N and earlierMaking TV apps searchableSearching within TV AppsBuilding TV gamesBuilding TV channelsOverviewDeveloping a TV input serviceWorking with channel dataManaging user interactionSupporting time-shiftingSupporting content recordingTV Apps checklistAndroid AutoOverviewGetting Started with AutoPlaying Audio for AutoMessaging for AutoTesting for AutoAndroid ThingsOverviewPlatform differencesGoogle servicesSupported hardwareDeveloper kitsGet startedNXP i.MX7DRaspberry Pi 3Advanced setupOverviewManually flash an imageRecover a deviceConnecting to Wi-Fi with adbBuild appsCreate a Things appOverviewCreate a projectConnect the hardwareInteract with peripheralsIntegrate peripheral driversCommunicate with wireless devicesBluetoothLoWPANConfigure devicesSettingsUpdatesInteract with peripheralsOverviewGPIOPWMI2CSPIUARTNative PIOCLI toolIntegrate native codeBuild user-space driversOverviewLocationInputSensorsLoWPANSamplesManage devicesOverviewCreate a productConfigure a productCreate a buildOverviewManage appsPush an updateOverviewAutomatic updatesMonitor analyticsTermsConsole Terms of ServiceSDK License AgreementAndroid Things ConsoleChrome OS devicesOverviewBuilding apps for Chrome OSPreparing your development environmentOptimizing Apps for Chrome OSResolving Issues with Screen SizeApp Manifest Compatibility for ChromebooksLoading Apps on ChromebooksChrome OS Device Support for AppsApp Rendering Differences on ChromebooksWindow managementInput compatibility for ChromebooksAndroid Studio on Chrome OSChrome OS devices on EmulatorTest Cases for Android Apps on Chrome OSCore topicsActivitiesIntroduction to activitiesThe activity lifecycleActivity state changesTest your activitiesTasks and back stackProcesses and app lifecycleParcelables and bundlesFragmentsOverviewCreate a fragmentTest your fragmentsBuild a flexible UICommunicate with other fragmentsInteract with other appsOverviewSending the user to another appGetting a result from an activityAllowing other apps to start your activityHandling app linksOverviewEnabling links to app contentVerify app linksCreate app links for instant appsLoadersRecents screenMulti-window supportApp shortcutsOverviewCreate shortcutsManage shortcutsBest practices for shortcutsApp widgetsOverviewBuild an app widgetBuild an app widget hostArchitecture ComponentsOverviewAdding Components to your ProjectData Binding LibraryOverviewGet startedLayouts and binding expressionsWork with observable data objectsGenerated binding classesBinding adaptersBind layout views to Architecture ComponentsTwo-way data bindingHandling LifecyclesLiveDataNavigationOverviewImplement NavigationUpdate UI components with NavigationUINested graphsPass data between destinationsAdd support for new destinationImplement conditional navigationCreate a deep link for a destinationGlobal actionsMigrate to the Navigation ComponentPaging LibraryOverviewUI Components and ConsiderationsData Components and ConsiderationsRoom Persistence LibraryViewModelWorkManagerOverviewBasicsAdvancedMigrating from Firebase JobDispatcherSaving StatesRelease notesIntents and intent filtersOverviewCommon intentsUser interface & navigationOverviewLayoutsOverviewBuild a responsive UI with ConstraintLayoutCreate a list with RecyclerViewCreate a card-based layoutImplementing adaptive UI flowsImproving layout performanceOverviewOptimizing layout hierarchiesRe-using layouts with <include/>Delayed loading of viewsMaking ListView scrolling smoothLinear layoutAdapter viewRelative layoutCustom view componentsOverviewCreating a custom view classImplementing custom drawingMaking the view interactiveOptimizing the viewLook and feelMaterial designStyles and themesAdaptive iconsAdd a floating action buttonCreate shadows and clip viewsTextAutosizing TextViewsDownloadable fontsFonts in XMLEmoji compatibilityMagnifier widgetSpansButtonsCheckboxesRadio buttonsToggle buttonsSpinnersPickersTooltipsNotificationsOverviewCreate a notificationCreate an expandable notificationStart an activity from a notificationCreate a group of notificationsCreate and manage notification channelsModify a notification BadgeCreate a custom notificationAdd the app barOverviewSet up the app barAdd and handle actionsAdd an up actionUse action views and action providersControl the system UI visibilityOverviewDim the system barsHide the status barHide the navigation barEnable fullscreen modeRespond to UI visibility changesDesigning effective navigationOverviewPlanning screens and their relationshipsPlanning for multiple touchscreen sizesProviding descendant and lateral navigationDesigning back and up navigationPutting it all together: wireframing the example appImplementing effective navigationOverviewCreating swipe views with tabsCreating a navigation drawerProviding up navigationProviding proper back navigationImplementing descendant navigationSlide between fragments using ViewPagerSupporting swipe-to-refreshOverviewAdding swipe-to-refresh to your appResponding to a refresh gestureToasts overviewPop-up messages overviewOverviewBuild and display a pop-up messageAdd an action to a messageDialogsMenusSettingsOverviewOrganize your settingsCustomize your settingsUse saved valuesBuild a hierarchy in codeHandle other form factorsPreference components and attributesSearchOverviewCreating a search interfaceAdding recent query suggestionsAdding custom suggestionsSearchable configurationAdding search functionalityOverviewSetting up the search interfaceStoring and searching for dataRemaining backward compatibleCopy and pasteDrag and dropCreating backward-compatible UIsOverviewAbstracting the new APIsProxying to the new APIsCreating an implementation with older APIsUsing the version-aware componentAnimations & transitionsOverviewAnimations overviewProperty animation overviewAnimate drawable graphicsReveal or hide a view using animationMove a view using animationMove a view using a fling animationEnlarge a view using a zoom animationAnimate movement using spring physicsAuto animate layout updatesAnimate layout changes using a transitionCreate a custom transition animationStart an activity using an animationImages & graphicsOverviewDrawables overviewVector drawables overviewHandling bitmapsSelecting colors with the palette APIReducing image download sizesHardware accelerationOpenGL ESDisplaying graphics with OpenGL ESOverviewBuilding an OpenGL ES environmentDefining shapesDrawing shapesApplying projection and camera viewsAdding motionResponding to touch eventsRenderingOverviewReducing overdrawPerformance and view hierarchiesAnalyzing with profile GPU renderingEnhancing graphics with wide color contentAudio & videoAudio & video overviewSupported media formatsMedia app architectureMedia app architecture overviewUsing a media sessionBuilding an audio appAudio app overviewBuilding a media browser serviceBuilding a media browser clientMedia session callbacksBuilding a video appVideo app overviewBuilding a video player activityMedia session callbacksResponding to media buttonsHandling changes in audio outputManaging audio focusThe Google Assistant and media appsRouting between devicesRouting overviewMediaRouter overviewMediaRouteProvider overviewControl amplitude with VolumeShaperMediaPlayer overviewMediaRecorder overviewExoPlayerBackground tasksOverviewGuide to background processingSending operations to multiple threadsOverviewSpecify the code to run on a threadCreate a manager for multiple threadsRun code on a thread pool threadCommunicate with the UI threadSchedule jobs intelligentlyServicesOverviewCreate a background serviceSend work requests to the background serviceReport work statusBound servicesAIDL overviewBackground optimizationsBroadcasts overviewImplicit Broadcast ExceptionsManage device awake stateOverviewKeep the device awakeSchedule repeating alarmsApp data & filesOverviewStorage overviewSave files on device storageSave key-value dataSave data in a local databaseOverviewDefine data using entitiesCreate views into a databaseAccess data using DAOsMigrate your databaseTest your databaseReference complex dataSharing simple dataOverviewSending simple data to other appsReceiving simple data from other appsAdding an easy share actionSharing filesOverviewSetting up file sharingSharing a fileRequesting a shared fileRetrieving file informationSharing files with NFCOverviewSending files to another deviceReceiving files from another devicePrinting filesOverviewPrinting photosPrinting HTML documentsPrinting custom documentsContent providersOverviewContent provider basicsCreating a content providerOpen files using storage access frameworkCreate a custom document providerApp install locationUser data & identityOverviewAdd sign-in workflowAutofill frameworkOverviewOptimize your app for autofillBuild autofill servicesCalendar provider overviewContacts providerOverviewRetrieving a list of contactsRetrieving details for a contactModifying contacts using intentsDisplaying the quick contact badgeAccount transferData backupOverviewBack up user dataBack up key-value pairsOverviewRegisterTest backup and restoreBest practices for unique identifiersRemember and authenticate usersOverviewRemember your userAuthenticate to OAuth2 servicesCreate a custom account typeUser locationOverviewOptimize location for batteryGet the last known locationChange location settingsReceive location updatesDisplay a location addressCreate and monitor geofencesDetect when users start an activityMigrate to location and context APIsAdd mapsTouch & inputOverviewInput eventsUsing touch gesturesOverviewDetect common gesturesTrack touch and pointer movementsAnimate a scroll gestureHandle multi-touch gesturesDrag and scaleManage touch events in a ViewGroupHandling keyboard inputOverviewSpecifying the input method typeHandling input method visibilitySupporting keyboard navigationHandling keyboard actionsSupporting game controllersOverviewHandling controller actionsSupporting controllers across Android versionsSupporting multiple game controllersInput method editorsCreating an input methodImage keyboardSpelling checkerCameraOverviewTaking photosRecording videosControlling the cameraCamera APISensorsOverviewSensors overviewMotion sensorsPosition sensorsEnvironment sensorsRaw GNSS measurementsConnectivityOverviewPerforming network operationsOverviewConnect to the networkManage network usageOptimize network data usageParse XML dataTransmit network data using VolleyOverviewSend a simple requestSet up RequestQueueMake a standard requestImplement a custom requestPerform network operations using CronetOverviewSend a simple requestCronet request lifecycleReferenceorg.chromium.netOverviewCallbackExceptionCronetEngineOverviewCronetEngine.BuilderOverviewLibraryLoaderCronetExceptionInlineExecutionProhibitedExceptionNetworkExceptionQuicExceptionUploadDataProviderUploadDataProvidersUploadDataSinkUrlRequestOverviewBuilderCallbackStatusStatusListenerUrlResponseInfoOverviewHeaderBlockTransferring data without draining the batteryOverviewOptimize downloads for efficient network accessMinimize the effect of regular updatesAvoid redundant downloadsModify patterns based on the connectivity typeReduce network battery drainOverviewCollecting network traffic dataAnalyzing data trafficOptimizing user-initiated network useOptimizing app-initiated network useOptimizing server-initiated network useOptimizing general network useTransfer data using Sync AdaptersOverviewCreate a Stub AuthenticatorCreate a Stub Content ProviderCreate a Sync AdapterRun a Sync AdapterBluetoothOverviewBluetooth low energy overviewNFCOverviewNFC basicsAdvanced NFCHost-based card emulation overviewTelecomOverviewBuild a calling appWi-FiWi-Fi scanning overviewWi-Fi peer-to-peer overviewWi-Fi aware overviewWi-Fi location with RTTCompanion device pairing overviewUSBOverviewAccessory overviewHost overviewVPNSession initiation protocol overviewDiscover and connectOverviewUse network service discoveryCreate P2P connections with Wi-FiUse Wi-Fi P2P for service discoveryRenderscriptOverviewAdvanced RenderScriptRuntime API referenceOverviewNumerical typesObject typesConversion functionsMathematical constants and functionsVector math functionsMatrix functionsQuaternion functionsAtomic update functionsTime functions and typesAllocation data access functionsObject characteristics functionsKernel invocation functions and typesInput/output functionsDebugging functionsGraphics functions and typesIndexWeb-based contentOverviewBuilding web apps in WebViewManaging WebView objectsMigrating to WebView in Android 4.4Supporting different screens in web appsDebugging web appsBest practices for web appsAndroid App BundlesOverviewDownload modules with the Play Core LibraryGoogle Play InstantOverview of Google Play InstantGet started with instant appsCreate an instant-enabled app bundleUX best practices for appsGet started with instant gamesOverviewUnity pluginTechnical requirements checklist for gamesUX best practices for gamesReduce the size of your instant app or gameAdd ads to your instant app or gameProvide multiple entry pointsIntegrate with FirebaseAdd Google Analytics for Firebase to your instant appUse Firebase Dynamic Links with instant appsGoogle Play Instant policyResourcesReferenceCode samplesSDK release notesSupportFAQsKnown issuesStackOverflowApp ActionsSlicesOverviewGetting StartedSlice templatesBest practicesTestingOverviewFundamentals of testingSet up projectBuilding effective unit testsOverviewBuilding local unit testsBuilding instrumented unit testsAutomating UI testsOverviewTesting UI for a single appTesting UI for multiple appsTesting app component integrationsOverviewTesting your serviceTesting your content providerTesting UI performanceEspressoOverviewSetup instructionsBasicsRecipesMultiprocessAccessibility checkingListsIntentsWebIdling resourceCheat sheetUI AutomatorJUnit4 RulesAndroidJUnitRunnerSamplesRelease notesPerformanceOverviewAndroid VitalsOverviewStuck Partial Wake LocksExcessive WakeupsExcessive Background Wi-Fi ScansExcessive Background Network UsageANRsCrashesSlow RenderingFrozen FramesPermission DenialsApp Startup TimeApp Standby BucketsProcesses and Threads OverviewBetter Performance through ThreadingOptimizing for Battery LifeOverviewOptimizing for Doze and App StandbyMonitoring the Battery Level and Charging StateDetermining and Monitoring the Docking State and TypeDetermining and Monitoring the Connectivity StatusPower Management RestrictionsAnalyzing Power Use with Battery HistorianTesting power-related issuesReducing APK SizeManage Your App's MemoryOverview of Memory ManagemementDesigning for SeamlessnessKeeping Your App ResponsivePerformance TipsSMP Primer for AndroidVerifying App Behavior on the Android Runtime (ART)AccessibilityOverviewMaking apps more accessibleUsing node tree debuggingBuilding accessibility servicesBuild accessible custom viewsBuild accessibility serviceTest your app's accessibilitySecurityApp security best practicesSecurity tipsSecurity with HTTPS and SSLNetwork security configurationUpdating your security provider to protect against SSL exploitsProtecting against security threats with SafetyNetOverviewSafetyNet Attestation APISafetyNet Safe Browsing APISafetyNet reCAPTCHA APISafetyNet Verify Apps APICryptographyAndroid Keystore SystemVerifying hardware-backed key pairs with key attestationAndroid Protected ConfirmationSupporting Direct BootUsing scoped directory accessApp security improvement programBuild for BillionsOverviewConnectivityDevice capabilityData costBattery consumptionUI and contentBuild for EnterpriseOverviewDeveloper guideWork profilesSet up managed configurationsWork contactsDevice management policiesDevice managementOverviewBuild a device policy controllerWork profiles on fully managed devicesDedicated devicesOverviewLock task modeMultiple usersCookbookDevice controlNetworking and telephonySecuritySystem updatesNetwork activity loggingAndroid versionsOverviewAndroid 9Android 8.0Android 7.0Device administrationGoogle PlayGoogle Play BillingOverviewUse the Google Play Billing LibraryOverviewAdd one-time product-specific featuresAdd subscription-specific featuresPlay Billing Library referencePlay Billing Library release notesUse In-app Billing with AIDLOverviewIn-app Billing ReferenceAdd Real-time Developer NotificationsBest PracticesTest Google Play BillingMaking Your App Content Searchable by GoogleOptimizing Contextual Content for the AssistantGoogle Play Developer APIAPK Expansion FilesApplication LicensingOverviewLicensing OverviewSetting Up for LicensingAdding Licensing to Your AppLicensing ReferenceGoogle Play Install ReferrerOverviewPlay Install Referrer LibraryOverviewReferenceReleases NotesPlay Install Referrer API









    
    
      Android Developers
    
    
    




    
    
      Docs
    
    
    




    
    
      Guides
    
    
    




    Cryptography
  


This document describes the proper way to use Android's cryptographic facilities
and includes some examples of its use. If your app requires greater key
security, use the Android Keystore system.
Note: Except where specified, this advice applies to all Android versions.
Specify a provider only with the Android Keystore system
If you're using the Android Keystore system,
you must specify a provider.
In other situations, however, Android doesn't guarantee a particular provider
for a given algorithm. Specifying a provider without using the Android Keystore
system could cause compatibility problems in future releases.
Choose a recommended algorithm
When you have the freedom to choose which algorithm to use (such as when you do
not require compatibility with a third-party system), we recommend using the
following algorithms:



Class
Recommendation




Cipher
AES in either CBC or GCM mode with 256-bit keys (such as AES/GCM/NoPadding)


MessageDigest
SHA-2 family (eg, SHA-256)


Mac
SHA-2 family HMAC (eg, HMACSHA256)


Signature
SHA-2 family with ECDSA (eg, SHA256withECDSA)



Perform common cryptographic operations
The following sections include snippets that demonstrates how you can complete
common cryptographic operations in your app.
Encrypt a message
byte[] plaintext = ...;
KeyGenerator keygen = KeyGenerator.getInstance("AES");
keygen.init(256);
SecretKey key = keygen.generateKey();
Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
cipher.init(Cipher.ENCRYPT_MODE, key);
byte[] ciphertext = cipher.doFinal(plaintext);
byte[] iv = cipher.getIV();

Generate a message digest
byte[] message = ...;
MessageDigest md = MessageDigest.getInstance("SHA-256");
byte[] digest = md.digest(message);

Generate a digital signature
You need to have a PrivateKey object containing the signing key, which you
can generate at runtime, read from a file bundled with your app, or obtain from
some other source depending on your needs.
byte[] message = ...;
PrivateKey key = ...;
Signature s = Signature.getInstance("SHA256withECDSA");
s.initSign(key);
s.update(message);
byte[] signature = s.sign();

Verify a digital signature
You need to have a PublicKey object containing the signer's public key,
which you might read from a file bundled with your app, extract from a
certificate, or
obtain from some other source depending on your needs.
byte[] message = ...;
byte[] signature = ...;
PublicKey key = ...;
Signature s = Signature.getInstance("SHA256withECDSA");
s.initVerify(key);
s.update(message);
boolean valid = s.verify(signature);

Implementation complexities
There are some details of the Android cryptography implementation that seem
unusual but are present due to compatibility concerns. This section discusses
the ones that you'll most likely encounter.
OAEP MGF1 message digest
RSA OAEP ciphers are parameterized by two different message digests: the “main”
digest and the MGF1 digest. There are Cipher identifiers that include digest
names, such as Cipher.getInstance("RSA/ECB/OAEPwithSHA-256andMGF1Padding"),
which specify the main digest and leave the MGF1 digest unspecified. For Android
Keystore, SHA-1 is used for the MGF1 digest, whereas for other Android
cryptographic providers, the two digests are the same.
To have more control over the digests that your app uses, you should request a
cipher with OAEPPadding, as in Cipher.getInstance("RSA/ECB/OAEPPadding"), and
provide an OAEPParameterSpec to init() to explicitly choose both digests.
Cipher cipher = Cipher.getInstance("RSA/ECB/OAEPPadding");
// To use SHA-256 the main digest and SHA-1 as the MGF1 digest
cipher.init(Cipher.ENCRYPT_MODE, new OAEPParameterSpec("SHA-256", "MGF1", MGF1ParameterSpec.SHA1, PSource.PSpecified.DEFAULT));
// To use SHA-256 for both digests
cipher.init(Cipher.ENCRYPT_MODE, new OAEPParameterSpec("SHA-256", "MGF1", MGF1ParameterSpec.SHA256, PSource.PSpecified.DEFAULT));

Deprecated functionality
The following sections describe deprecated functionality that you should no
longer use in your app.
Bouncy Castle algorithms
The Bouncy Castle
implementations of many algorithms are
deprecated.
This only affects cases where you explicitly request the Bouncy Castle provider,
as shown in the following example:
Cipher.getInstance("AES/CBC/PKCS7PADDING", "BC");
// OR
Cipher.getInstance("AES/CBC/PKCS7PADDING", Security.getProvider("BC"));

As noted above, requesting a specific provider is discouraged, so if you follow
that guideline, this deprecation should not affect you.
Password-based encryption ciphers without an IV
Password-based encryption (PBE) ciphers that require an initialization vector
(IV) can obtain it from the key, if it's suitably constructed, or from an
explicitly-passed IV. When passing a PBE key that doesn't contain an IV and no
explicit IV, the PBE ciphers on Android currently assume an IV of zero.
When using PBE ciphers, always pass an explicit IV, as shown in the following
code snippet:
SecretKey key = ...;
Cipher cipher = Cipher.getInstance("PBEWITHSHA256AND256BITAES-CBC-BC");
byte[] iv = new byte[16];
new SecureRandom().nextBytes(iv);
cipher.init(Cipher.ENCRYPT_MODE, key, new IvParameterSpec(iv));

Crypto provider
As of Android 9 (API level 28), the Crypto Java Cryptography Architecture
(JCA) provider has been removed. If your app requests an instance of the
Crypto provider, such as by calling the following method, a
NoSuchProviderException
occurs.
SecureRandom.getInstance("SHA1PRNG", "Crypto");

Supported algorithms
These are the JCA algorithm identifiers that are supported on Android at each
API level.



AlgorithmParameterGenerator
AlgorithmParameters
CertPathBuilder
CertPathValidator
CertStore
CertificateFactory
Cipher
KeyAgreement
KeyFactory
KeyGenerator
KeyManagerFactory
KeyPairGenerator
KeyStore
Mac
MessageDigest
SSLContext
SSLEngine.Supported
SSLSocket.Supported
SecretKeyFactory
SecureRandom
Signature
TrustManagerFactory

AlgorithmParameterGenerator



Algorithm
Supported API Levels




AES
1-8


DES
1-8


DESede
1-8


DH
1+


DSA
1+



AlgorithmParameters



Algorithm
Supported API Levels




AES
1+


BLOWFISH
10+


ChaCha20
28+


DES
1+


DESede
1+


DH
1+


DSA
1+


EC
26+


GCM
22+


IES
1-8


OAEP
1+


PBEwithHmacSHA1AndAES_128
26+


PBEwithHmacSHA1AndAES_256
26+


PBEwithHmacSHA224AndAES_128
26+


PBEwithHmacSHA224AndAES_256
26+


PBEwithHmacSHA256AndAES_128
26+


PBEwithHmacSHA256AndAES_256
26+


PBEwithHmacSHA384AndAES_128
26+


PBEwithHmacSHA384AndAES_256
26+


PBEwithHmacSHA512AndAES_128
26+


PBEwithHmacSHA512AndAES_256
26+


PKCS12PBE
1+


PSS
1-8,24+



CertPathBuilder



Algorithm
Supported API Levels




PKIX
1+



CertPathValidator



Algorithm
Supported API Levels




PKIX
1+



CertStore



Algorithm
Supported API Levels




Collection
1+



CertificateFactory



Algorithm
Supported API Levels




X.509
1+



Cipher



Algorithm
Modes
Paddings
Supported API Levels
Notes




AES
CBCCFBCTRCTSECBOFB
ISO10126PaddingNoPaddingPKCS5Padding
1+



GCM
NoPadding
10+



AES_128
CBCECB
NoPaddingPKCS5Padding
26+



GCM
NoPadding
26+



AES_256
CBCECB
NoPaddingPKCS5Padding
26+



GCM
NoPadding
26+



ARC4
ECB
NoPadding
10+



NONE
NoPadding
28+



BLOWFISH
CBCCFBCTRCTSECBOFB
ISO10126PaddingNoPaddingPKCS5Padding
10+



ChaCha20
NONEPoly1305
NoPadding
28+
ChaCha with 20 rounds, 96-bit nonce, and 32-bit counter as described in RFC 7539.


DES
CBCCFBCTRCTSECBOFB
ISO10126PaddingNoPaddingPKCS5Padding
1+



DESede
CBCCFBCTRCTSECBOFB
ISO10126PaddingNoPaddingPKCS5Padding
1+



RSA
ECBNONE
NoPaddingOAEPPaddingPKCS1Padding
1+



OAEPwithSHA-1andMGF1PaddingOAEPwithSHA-256andMGF1Padding
10+



OAEPwithSHA-224andMGF1PaddingOAEPwithSHA-384andMGF1PaddingOAEPwithSHA-512andMGF1Padding
23+




KeyAgreement



Algorithm
Supported API Levels




DH
1+


ECDH
11+



KeyFactory



Algorithm
Supported API Levels




DH
1+


DSA
1+


EC
11+


RSA
1+


X.509
1-8



KeyGenerator



Algorithm
Supported API Levels




AES
1+


AESWRAP
1-8


ARC4
14+


BLOWFISH
10+


ChaCha20
28+


DES
1+


DESede
1+


DESedeWRAP
1-8


HmacMD5
1+


HmacSHA1
11+


HmacSHA224
1-8, 22+


HmacSHA256
1+


HmacSHA384
1+


HmacSHA512
1+


RC4
10-13



KeyManagerFactory



Algorithm
Supported API Levels




PKIX
1+



KeyPairGenerator



Algorithm
Supported API Levels




DH
1+


DSA
1+


EC
11+


RSA
1+



KeyStore



Algorithm
Supported API Levels




AndroidCAStore
14+


AndroidKeyStore
18+


BCPKCS12
1-8


BKS
1+


BouncyCastle
1+


PKCS12
1+


PKCS12-DEF
1-8



Mac



Algorithm
Supported API Levels




DESMAC
1-8


DESMAC/CFB8
1-8


DESedeMAC
1-8


DESedeMAC/CFB8
1-8


DESedeMAC64
1-8


DESwithISO9797
1-8


HmacMD5
1+


HmacSHA1
1+


HmacSHA224
1-8, 22+


HmacSHA256
1+


HmacSHA384
1+


HmacSHA512
1+


ISO9797ALG3MAC
1-8


PBEwithHmacSHA
1+


PBEwithHmacSHA1
1+


PBEwithHmacSHA224
26+


PBEwithHmacSHA256
26+


PBEwithHmacSHA384
26+


PBEwithHmacSHA512
26+



MessageDigest



Algorithm
Supported API Levels




MD5
1+


SHA-1
1+


SHA-224
1-8, 22+


SHA-256
1+


SHA-384
1+


SHA-512
1+



SSLContext



Algorithm
Supported API Levels




Default
10+


SSL
10+


SSLv3
10-25


TLS
1+


TLSv1
10+


TLSv1.1
16+


TLSv1.2
16+



SSLEngine



Algorithm
Supported API Levels
Enabled By Default




SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
9-22
9-19


SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
9-22
9-19


SSL_DHE_DSS_WITH_DES_CBC_SHA
9-22
9-19


SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
9-22
9-19


SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
9-22
9-19


SSL_DHE_RSA_WITH_DES_CBC_SHA
9-22
9-19


SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
9-22



SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
9-22



SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
9-22



SSL_DH_anon_WITH_DES_CBC_SHA
9-22



SSL_DH_anon_WITH_RC4_128_MD5
9-22



SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
9-22
9-19


SSL_RSA_EXPORT_WITH_RC4_40_MD5
9-22
9-19


SSL_RSA_WITH_3DES_EDE_CBC_SHA
9+
9-19


SSL_RSA_WITH_DES_CBC_SHA
9-22
9-19


SSL_RSA_WITH_NULL_MD5
9-22



SSL_RSA_WITH_NULL_SHA
9-22



SSL_RSA_WITH_RC4_128_MD5
9-25
9-19


SSL_RSA_WITH_RC4_128_SHA
9-25
9-23


TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
1-8
1-8


TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
1-8
1-8


TLS_DHE_DSS_WITH_AES_128_CBC_SHA
9-22
9-22


TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
20-22



TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
20-22



TLS_DHE_DSS_WITH_AES_256_CBC_SHA
9-22
20-22


TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
20-22



TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
20-22



TLS_DHE_DSS_WITH_DES_CBC_SHA
1-8
1-8


TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
1-8
1-8


TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
1-8
1-8


TLS_DHE_RSA_WITH_AES_128_CBC_SHA
9-25
9-25


TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
20-25



TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
20-25
20-25


TLS_DHE_RSA_WITH_AES_256_CBC_SHA
9-25
20-25


TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
20-25



TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
20-25
20-25


TLS_DHE_RSA_WITH_DES_CBC_SHA
1-8
1-8


TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
1-8



TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
1-8



TLS_DH_DSS_WITH_DES_CBC_SHA
1-8



TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
1-8



TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
1-8



TLS_DH_RSA_WITH_DES_CBC_SHA
1-8



TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
1-8



TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
1-8



TLS_DH_anon_WITH_AES_128_CBC_SHA
9-22



TLS_DH_anon_WITH_AES_128_CBC_SHA256
20-22



TLS_DH_anon_WITH_AES_128_GCM_SHA256
20-22



TLS_DH_anon_WITH_AES_256_CBC_SHA
9-22



TLS_DH_anon_WITH_AES_256_CBC_SHA256
20-22



TLS_DH_anon_WITH_AES_256_GCM_SHA384
20-22



TLS_DH_anon_WITH_DES_CBC_SHA
1-8



TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
20-22



TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
20+
20+


TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
20+



TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
20+
20+


TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
20+
20+


TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
20+



TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
20+
20+


TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
24+
24+


TLS_ECDHE_ECDSA_WITH_NULL_SHA
20-22



TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
20-25
20-23


TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
21+
21+


TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
21+
21+


TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
24+
24+


TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
20-22



TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
20+
20+


TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
20+



TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
20+
20+


TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
20+
20+


TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
20+



TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
20+
20+


TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
24+
24+


TLS_ECDHE_RSA_WITH_NULL_SHA
20-22



TLS_ECDHE_RSA_WITH_RC4_128_SHA
20-25
20-23


TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
20-22



TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
20-22



TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
20-22



TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
20-22



TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
20-22



TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
20-22



TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
20-22



TLS_ECDH_ECDSA_WITH_NULL_SHA
20-22



TLS_ECDH_ECDSA_WITH_RC4_128_SHA
20-22



TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
20-22



TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
20-22



TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
20-22



TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
20-22



TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
20-22



TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
20-22



TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
20-22



TLS_ECDH_RSA_WITH_NULL_SHA
20-22



TLS_ECDH_RSA_WITH_RC4_128_SHA
20-22



TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
20-22



TLS_ECDH_anon_WITH_AES_128_CBC_SHA
20-22



TLS_ECDH_anon_WITH_AES_256_CBC_SHA
20-22



TLS_ECDH_anon_WITH_NULL_SHA
20-22



TLS_ECDH_anon_WITH_RC4_128_SHA
20-22



TLS_EMPTY_RENEGOTIATION_INFO_SCSV
20+
20+


TLS_FALLBACK_SCSV
21+



TLS_NULL_WITH_NULL_NULL
1-8



TLS_PSK_WITH_3DES_EDE_CBC_SHA
21-22



TLS_PSK_WITH_AES_128_CBC_SHA
21+
21+


TLS_PSK_WITH_AES_256_CBC_SHA
21+
21+


TLS_PSK_WITH_RC4_128_SHA
21-25



TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
1-8
1-8


TLS_RSA_WITH_3DES_EDE_CBC_SHA
1-8
1-8


TLS_RSA_WITH_AES_128_CBC_SHA
9+
9+


TLS_RSA_WITH_AES_128_CBC_SHA256
20+



TLS_RSA_WITH_AES_128_GCM_SHA256
20+
20+


TLS_RSA_WITH_AES_256_CBC_SHA
9+
20+


TLS_RSA_WITH_AES_256_CBC_SHA256
20+



TLS_RSA_WITH_AES_256_GCM_SHA384
20+
20+


TLS_RSA_WITH_DES_CBC_SHA
1-8
1-8


TLS_RSA_WITH_NULL_MD5
1-8



TLS_RSA_WITH_NULL_SHA
1-8



TLS_RSA_WITH_NULL_SHA256
20-22




SSLSocket



Algorithm
Supported API Levels
Enabled By Default




SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
9-22
9-19


SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA
9-22
9-19


SSL_DHE_DSS_WITH_DES_CBC_SHA
9-22
9-19


SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
9-22
9-19


SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA
9-22
9-19


SSL_DHE_RSA_WITH_DES_CBC_SHA
9-22
9-19


SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA
9-22



SSL_DH_anon_EXPORT_WITH_RC4_40_MD5
9-22



SSL_DH_anon_WITH_3DES_EDE_CBC_SHA
9-22



SSL_DH_anon_WITH_DES_CBC_SHA
9-22



SSL_DH_anon_WITH_RC4_128_MD5
9-22



SSL_RSA_EXPORT_WITH_DES40_CBC_SHA
9-22
9-19


SSL_RSA_EXPORT_WITH_RC4_40_MD5
9-22
9-19


SSL_RSA_WITH_3DES_EDE_CBC_SHA
9+
9-19


SSL_RSA_WITH_DES_CBC_SHA
9-22
9-19


SSL_RSA_WITH_NULL_MD5
9-22



SSL_RSA_WITH_NULL_SHA
9-22



SSL_RSA_WITH_RC4_128_MD5
9-25
9-19


SSL_RSA_WITH_RC4_128_SHA
9-25
9-23


TLS_DHE_DSS_WITH_AES_128_CBC_SHA
9-22
9-22


TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
20-22



TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
20-22



TLS_DHE_DSS_WITH_AES_256_CBC_SHA
9-22
11-22


TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
20-22



TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
20-22



TLS_DHE_RSA_WITH_AES_128_CBC_SHA
9-25
9-25


TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
20-25



TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
20-25
20-25


TLS_DHE_RSA_WITH_AES_256_CBC_SHA
9-25
11-25


TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
20-25



TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
20-25
20-25


TLS_DH_anon_WITH_AES_128_CBC_SHA
9-22



TLS_DH_anon_WITH_AES_128_CBC_SHA256
20-22



TLS_DH_anon_WITH_AES_128_GCM_SHA256
20-22



TLS_DH_anon_WITH_AES_256_CBC_SHA
9-22



TLS_DH_anon_WITH_AES_256_CBC_SHA256
20-22



TLS_DH_anon_WITH_AES_256_GCM_SHA384
20-22



TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
11-22
11-19


TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
11+
11+


TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
20+



TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
20+
20+


TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
11+
11+


TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
20+



TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
20+
20+


TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
24+
24+


TLS_ECDHE_ECDSA_WITH_NULL_SHA
11-22



TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
11-25
11-23


TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
21+
21+


TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
21+
21+


TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
24+
24+


TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
11-22
11-19


TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
11+
11+


TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
20+



TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
20+
20+


TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
11+
11+


TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
20+



TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
20+
20+


TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
24+
24+


TLS_ECDHE_RSA_WITH_NULL_SHA
11-22



TLS_ECDHE_RSA_WITH_RC4_128_SHA
11-25
11-23


TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
11-22
11-19


TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
11-22
11-19


TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
20-22



TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
20-22



TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
11-22
11-19


TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
20-22



TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
20-22



TLS_ECDH_ECDSA_WITH_NULL_SHA
11-22



TLS_ECDH_ECDSA_WITH_RC4_128_SHA
11-22
11-19


TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
11-22
11-19


TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
11-22
11-19


TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
20-22



TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
20-22



TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
11-22
11-19


TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
20-22



TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
20-22



TLS_ECDH_RSA_WITH_NULL_SHA
11-22



TLS_ECDH_RSA_WITH_RC4_128_SHA
11-22
11-19


TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
11-22



TLS_ECDH_anon_WITH_AES_128_CBC_SHA
11-22



TLS_ECDH_anon_WITH_AES_256_CBC_SHA
11-22



TLS_ECDH_anon_WITH_NULL_SHA
11-22



TLS_ECDH_anon_WITH_RC4_128_SHA
11-22



TLS_EMPTY_RENEGOTIATION_INFO_SCSV
11+
11+


TLS_FALLBACK_SCSV
21+



TLS_PSK_WITH_3DES_EDE_CBC_SHA
21-22



TLS_PSK_WITH_AES_128_CBC_SHA
21+
21+


TLS_PSK_WITH_AES_256_CBC_SHA
21+
21+


TLS_PSK_WITH_RC4_128_SHA
21-25



TLS_RSA_WITH_AES_128_CBC_SHA
9+
9+


TLS_RSA_WITH_AES_128_CBC_SHA256
20+



TLS_RSA_WITH_AES_128_GCM_SHA256
20+
20+


TLS_RSA_WITH_AES_256_CBC_SHA
9+
11+


TLS_RSA_WITH_AES_256_CBC_SHA256
20+



TLS_RSA_WITH_AES_256_GCM_SHA384
20+
20+


TLS_RSA_WITH_NULL_SHA256
20-22




SecretKeyFactory



Algorithm
Supported API Levels




AES
23+


DES
1+


DESede
1+


HmacSHA1
23+


HmacSHA224
23+


HmacSHA256
23+


HmacSHA384
23+


HmacSHA512
23+


PBEwithHmacSHA1
1+


PBEwithHmacSHA1AndAES_128
26+


PBEwithHmacSHA1AndAES_256
26+


PBEwithHmacSHA224AndAES_128
26+


PBEwithHmacSHA224AndAES_256
26+


PBEwithHmacSHA256AndAES_128
26+


PBEwithHmacSHA256AndAES_256
26+


PBEwithHmacSHA384AndAES_128
26+


PBEwithHmacSHA384AndAES_256
26+


PBEwithHmacSHA512AndAES_128
26+


PBEwithHmacSHA512AndAES_256
26+


PBEwithMD5AND128BITAES-CBC-OPENSSL
1+


PBEwithMD5AND192BITAES-CBC-OPENSSL
1+


PBEwithMD5AND256BITAES-CBC-OPENSSL
1+


PBEwithMD5ANDDES
1+


PBEwithMD5ANDRC2
1+


PBEwithSHA1ANDDES
1+


PBEwithSHA1ANDRC2
1+


PBEwithSHA256AND128BITAES-CBC-BC
1+


PBEwithSHA256AND192BITAES-CBC-BC
1+


PBEwithSHA256AND256BITAES-CBC-BC
1+


PBEwithSHAAND128BITAES-CBC-BC
1+


PBEwithSHAAND128BITRC2-CBC
10+


PBEwithSHAAND128BITRC4
10+


PBEwithSHAAND192BITAES-CBC-BC
1+


PBEwithSHAAND2-KEYTRIPLEDES-CBC
1+


PBEwithSHAAND256BITAES-CBC-BC
1+


PBEwithSHAAND3-KEYTRIPLEDES-CBC
1+


PBEwithSHAAND40BITRC2-CBC
1+


PBEwithSHAAND40BITRC4
10+


PBEwithSHAANDTWOFISH-CBC
10+


PBKDF2withHmacSHA1
10+


PBKDF2withHmacSHA1And8BIT
19+


PBKDF2withHmacSHA224
26+


PBKDF2withHmacSHA256
26+


PBKDF2withHmacSHA384
26+


PBKDF2withHmacSHA512
26+



SecureRandom



Algorithm
Supported API Levels




SHA1PRNG
1+



Signature



Algorithm
Supported API Levels




DSA
1+


DSAwithSHA1
1+


DSS
1-19


ECDSA
11+


ECDSAwithSHA1
11+


MD2withRSA
1-3


MD4withRSA
1-8


MD5withRSA
1+


MD5withRSA/ISO9796-2
1-8


NONEwithDSA
1+


NONEwithECDSA
11+


NONEwithRSA
17+


RSASSA-PSS
1-8


SHA1withDSA
1+


SHA1withECDSA
11+


SHA1withRSA
1+


SHA1withRSA/ISO9796-2
1-8


SHA1withRSA/PSS
23+


SHA224withDSA
20+


SHA224withECDSA
20+


SHA224withRSA
20+


SHA224withRSA/PSS
23+


SHA256withDSA
1+


SHA256withECDSA
11+


SHA256withRSA
1+


SHA256withRSA/PSS
23+


SHA384withECDSA
11+


SHA384withRSA
1+


SHA384withRSA/PSS
23+


SHA512withECDSA
11+


SHA512withRSA
1+


SHA512withRSA/PSS
23+



TrustManagerFactory



Algorithm
Supported API Levels




PKIX
1+





Content and code samples on this page are subject to the licenses described in the Content License. Java is a registered trademark of Oracle and/or its affiliates.

      
      Last updated January 17, 2019.
    





          
          
            Twitter
          
        Follow @AndroidDev on Twitter
          
          
            YouTube
          
        Check out Android Developers on YouTubeMore Android
                Android
            
                Enterprise
            
                Security
            
                Source
            Support
                Report platform bug
            
                Report documentation bug
            
                Google Play support
            
                Join user studies
            Documentation
                Developer guides
            
                Design guides
            
                API reference
            
                Samples
            
                Android Studio
            
                Android
            
                Chrome
            
                Firebase
            
                Google Cloud Platform
            
                All Products
            
            Bahasa Indonesia
          
            Deutsch
          
            English
          
            español
          
            Español (América Latina)
          
            français
          
            Português Brasileiro
          
            Tiếng Việt
          
            Türkçe
          
            Русский
          
            ภาษาไทย
          
            日本語
          
            简体中文
          
            繁體中文
          
            한국어
          Privacy
         License
         Brand Guidelines
         
        Get Android and Google Play news by email
      
        
        Subscribe
      
