Kotlin Android (current) C#/Visual Basic Windows Phone PHP Arduino Блог pets Освой Kotlin играючи Сайт Александра Климова /* Моя кошка замечательно разбирается в программировании. Стоит мне объяснить проблему ей - и все становится ясно. */ John Robbins, Debugging Applications, Microsoft Press, 2000 Главная Теория Palette ListView Котошоп Анимация SQLite OpenGL ES Библиотеки Игры Wear Android Things Эмулятор Android Studio RxJava Советы Статьи Книги Java Kotlin Дизайн Отладка Open Source Полезные ресурсы Котаны, читайте на здоровье! × Статья проплачена кошками - всемирно известными производителями котят. Если статья вам понравилась, то можете поддержать проект . Закрыть Kotlin Любой кот линяет. Из выпавшей шерсти можно собрать второго кота. По такой же аналогии из Java можно создать новый язык Kotlin, образованный из двух слов Kot lin яет. Есть ещё неправдоподобная версия об острове в Финском заливе, которая просто смешна и не заслуживает внимания. 17 мая 2017 года на Google IO объявили о поддержке Kotlin в Android Studio 3.0. Пора учить новый язык, который заслужил много лестных отзывов от опытных разработчиков. Что нового В октябре 2018 года вышла версия Kotlin 1.3. Список новинок здесь . Корутины вышли из экспериментального статуса. Функцию main() можно использовать без параметров. Появились беззнаковые типы: UByte (0...255), UShort (0...65535), UInt (0...2^32 - 1), ULong (0...2^64 - 1). 28 ноября 2017 года вышла новая версия Kotlin 1.2. Список новинок здесь . Добавлены новые функции для изменяемых списков: fill , replaceAll , shuffle . Добавлена новая функция shuffled для неизменяемых списков. Добавлены математические функции. Например, можем узнать, что число является отрицательным. val item = -100
println("${item.sign}") // вернёт -1 Базовые принципы Исходный код хранится в файлах с расширением .kt (почему не .kot ?). В языке используется "кошачий принцип" - чем меньше печатаешь код, тем больше времени останется на сон. Например, необязательно ставить точку с запятой в конце выражения. Так поступает JavaScript и многие новые языки программирования. // и так сойдёт
val x = 1
val y = 2 В Kotlin есть единственное место, где точка с запятой обязательна - в перечислении enum Необязательно объявлять тип переменной, если из контекста понятно её предназначение. Если брать предыдущий пример, то по значению 1 можно догадаться, что переменная является типом Int . Kotlin не делит типы на примитивные и их обёртки. Например, есть тип Int вместо int и Integer . Можно сразу вызывать println вместо длинного System.out.println . Стандартная библиотека Kotlin включает в себя популярные методы Java для быстрого доступа. Например, можно быстро получить содержимое файла с сервера через метод URL.readText() : // не вызывать в основном потоке!
val address = "http://example.com"
val someText = URL(address).readText() Объявление переменных В Java мы сначала указываем тип переменной, а потом её имя. В Kotlin немного не так. Сначала вы указываете ключевое слово val или var , затем имя переменной и по желанию можете указать тип переменной. val kitty = "Васька"
val age = 7
// необязательно, но укажем тип
val weight: Int = 3
val catName: String = "Мурзик"

val actionBar = supportActionBar // объект ActionBar в активности без new Если вы не инициализируете переменную, то тип указать нужно обязательно. val age: Int
age = 7 Иногда тип указывать обязательно. val a: Any = 12
val context: Context = activity Ключевое слово val (от слова value) ссылается на неизменяемую переменную, что соответствует ключевому слову final в Java. // Java
final String name = "Васька";

// Kotlin
val name = "Васька" А часто используемое выражение в Java можно заменить на конструкцию с ключевым словом const // Java
public static final String CAT_TALK = "meow";

// Kotlin
const val CAT_TALK = "meow" Для обычных изменяемых переменных используется ключевое слово var (от слова variable). Рекомендуется всегда использовать val , если это позволяет логика программы. При этом нужно помнить, что хотя ссылка val неизменяема, сам объект может быть изменяемым: val cats = arrayListOf("Васька")
cats.add("Барсик") При использовании var вы можете не указывать тип переменной, но это не значит, что вы можете использовать его не по назначению, это вам не PHP. var answer = 42
// так нельзя answer = "нет ответа" Ключевое слово inline Ещё одно новое ключевое слово в Kotlin. Ключевое слово by lazy val infoTextView by lazy { view!!.findViewById<TextView>(R.id.textView) } Псевдоним для импорта Чтобы не путаться с именами классов из разных пакетов, можно присвоить новый псевдоним. import android.os.Bundle
import ru.alexanderklimov.cat.Bundle as CatBundle

fun getBundle() {
    val bundle1 = Bundle()
    val bundle2 = CatBundle()
} Исключения Создадим собственное исключение. class CustomException(message:String): Exception(message) Теперь можем кинуть созданное исключение в своём коде в нужном месте. throw CustomException("Threw custom exception") Продолжить изучение Kotlin Базовые типы Защита от null fun (функции) Функции-расширения (Extension functions) Свойства-расширения enum if when Циклы for, while, do-while, forEach, repeat() Интервалы .. Классы Data Classes Ключевое слово object Ключевое слово companion Pair и Triple Аннотация @JvmOverloads Интерфейсы Коллекции Работа со строками Массивы Лямбды with, apply, also Модификатор lateinit (отложенная инициализация) Исключения Корутины (Сопрограммы) Сконвертировать существующий Java-код на Kotlin можно через меню Code | Convert Java File to Kotlin File . Если скопировать в буфер обмена код на Java и вставить его в kt-файл, то студия автоматически сконвертирует код. На заметку: Файлы с кодом на Kotlin смотрятся странно в папке java в проекте студии. Открываем файл gradle.build модуля и в секции android добавляем блок: sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
} Переключаемся в режим Project и переименовываем папку java . Приложение будет работать по-прежнему. В режиме Android по-прежнему будет видна папка java , это жестко прописано в студии. Может потом поправят этот момент. Tools | Kotlin Также в студии есть целый раздел меню для настройки: Tools | Kotlin . Show Kotlin Bytecode При выборе Show Kotlin Bytecode можно просматривать любой файл *.kt, в отдельном окне будет виден байткод файла. Если в нём не будет данных, которых нельзя представить в Java, то также будет доступна возможность декомпилировать его в Java-код кнопкой Decompile . Kotlin REPL Интересная оболочка в виде командной строки. Можно быстро написать какое-то выражение и получить результат. Anko Библиотека Anko была специально разработана для удобного программирования под Android, сокращая количество кода для вызовов намерений, диалоговых окон, журналирования и т.д. //Java
Toast.makeText(context, "Hello Kitty!", Toast.LENGTH_SHORT).show();

//Anko Kotlin
toast("Hello Kitty!")

// Java style
val intent = Intent(this, SecondActivity::class.java)
startActivity(intent)

// Anko
startActivity<SecondActivity>()

// Anko Intent для звонка
makeCall("911") Примеры на Kotlin Android KTX Hello Kitty Щелчок кнопки/Счётчик ворон SharedPreferences: Сохраняем настройки Переключение между экранами приложения Счётчик шагов Запускаем фотосъёмку через Intent Запускаем съёмку видео через Intent ShareActionProvider (Провайдер действия передачи информации) Android: ValueAnimator RxKotlin Книги На русском языке доступна книга Kotlin в действии . В начале книге перечисляются благодарности, в том числе - Наконец, мы хотели бы поблагодарить наши семьи и котов за то, что они делают этот мир лучше. Реклама Реклама © 2019 А.Климов